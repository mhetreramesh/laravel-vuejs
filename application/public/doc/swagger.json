{
    "swagger": "2.0",
    "info": {
        "description": "Classic PIM REST API Test",
        "version": "1.0.0",
        "title": "Classic PIM REST API"
    },
    "host": "localhost:8091/api",
    "basePath": "/",
    "tags": [
        {
            "name": "items",
            "description": "Article CRUD API"
        },
        {
            "name": "category",
            "description": "Category CRUD API"
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/items": {
            "get": {
                "tags": [
                    "items"
                ],
                "summary": "Get all items",
                "description": "Search & returns all items",
                "operationId": "getAllItems",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name":"page",
                        "in":"query",
                        "description":"Page number",
                        "required":false,
                        "type":"integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": [{
                            "$ref": "#/definitions/Item"
                        }]
                    },
                    "400": {
                        "description": "Invalid Item"
                    }
                }
            },
            "post": {
                "tags": [
                    "items"
                ],
                "summary": "Create new items",
                "description": "Post items API",
                "operationId": "postItem",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create Item",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    },
                    "400": {
                        "description": "Invalid Item"
                    }
                }
            }
        },
        "/items/{id}/edit": {
            "get": {
                "tags": [
                    "items"
                ],
                "summary": "Find Item by id",
                "description": "Returns recpie by id",
                "operationId": "getItem",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name":"id",
                        "in":"path",
                        "description":"ID of Item to return",
                        "required":true,
                        "type":"integer",
                        "format":"int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "items"
                ],
                "summary": "Update Item",
                "description": "Update Item data",
                "operationId": "putItem",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name":"id",
                        "in":"path",
                        "description":"ID of Item to return",
                        "required":true,
                        "type":"integer",
                        "format":"int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Item placed for purchasing the pet",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    },
                    "400": {
                        "description": "Invalid Item"
                    }
                }
            },
            "delete": {
                "tags": [
                    "items"
                ],
                "summary": "Delete Items",
                "description": "Hard delete of Item",
                "operationId": "deleteItem",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name":"id",
                        "in":"path",
                        "description":"ID of Item to return",
                        "required":true,
                        "type":"integer",
                        "format":"int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    },
                    "400": {
                        "description": "Invalid Item"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "category"
                ],
                "summary": "Get all categories",
                "description": "Search & returns all categories",
                "operationId": "getAllCategory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name":"page",
                        "in":"query",
                        "description":"Page number",
                        "required":false,
                        "type":"integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": [{
                            "$ref": "#/definitions/Category"
                        }]
                    },
                    "400": {
                        "description": "Invalid Category"
                    }
                }
            },
            "post": {
                "tags": [
                    "category"
                ],
                "summary": "Create new Category",
                "description": "Post Category API",
                "operationId": "postCategory",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create Category",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "400": {
                        "description": "Invalid Category"
                    }
                }
            }
        },
        "/categories/{id}/edit": {
            "get": {
                "tags": [
                    "category"
                ],
                "summary": "Find Category by id",
                "description": "Returns Category by id",
                "operationId": "getCategory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name":"id",
                        "in":"path",
                        "description":"ID of Item to return",
                        "required":true,
                        "type":"integer",
                        "format":"int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "category"
                ],
                "summary": "Update Category",
                "description": "Update Category data",
                "operationId": "putCategory",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name":"id",
                        "in":"path",
                        "description":"ID of Category to return",
                        "required":true,
                        "type":"integer",
                        "format":"int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Category placed for purchasing the pet",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "400": {
                        "description": "Invalid Category"
                    }
                }
            },
            "delete": {
                "tags": [
                    "category"
                ],
                "summary": "Delete Category",
                "description": "Hard delete of Category",
                "operationId": "deleteCategory",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name":"id",
                        "in":"path",
                        "description":"ID of Category to return",
                        "required":true,
                        "type":"integer",
                        "format":"int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "400": {
                        "description": "Invalid Category"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "path"
        }
    },
    "definitions": {
        "Item": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "ean": {
                    "type": "string"
                },
                "quanitity": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "categories": {
                    "type": "array"
                }
            },
            "xml": {
                "name": "Item"
            }
        },
        "Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Item"
            }
        },
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}